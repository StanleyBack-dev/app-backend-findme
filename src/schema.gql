# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  street: String!
  neighborhood: String!
  number: String!
  state: String!
}

type Customers {
  idtb_customers: Float!
  public_id_customers: String!
  name: String!
  last_name: String!
  cpf: String!
  email: String!
  contact: String!
  image_url: String
  address: Address
  status: Boolean!
  created_by: Float!
  updated_by: Float
  inactivated_by: Float
  inactivated_at: DateTime
  created_at: DateTime!
  updated_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Roles {
  idtb_roles: Float!
  name: String!
  description: String
  status: Boolean!
  created_by: Float!
  updated_by: Float
  inactivated_by: Float
  inactivated_at: DateTime
  created_at: DateTime!
  updated_at: DateTime
}

type Users {
  idtb_users: Float!
  public_id_users: String!
  username: String!
  name: String!
  last_name: String!
  cpf: String!
  email: String!
  phone: String!
  status: Boolean!
  first_access: Boolean!
  last_login_at: DateTime
  created_by: Float!
  updated_by: Float
  inactivated_by: Float
  inactivated_at: DateTime
  created_at: DateTime!
  updated_at: DateTime
}

type GetUsersDto {
  idtb_users: Float!
  tenantId: Float!
  username: String!
}

type LoginResponseDto {
  accessToken: String!
  user: GetUsersDto!
}

type LogoutResponseDto {
  message: String!
}

type DeleteRolesResponseDto {
  idtb_roles: Int!
  status: Boolean!
  inactivated_at: DateTime
  inactivated_by: Int
}

type Query {
  users: [Users!]!
  roles: [Roles!]!
  customers: [Customers!]!
}

type Mutation {
  createUser(data: CreateUsersDto!): Users!
  updateUsers(id: Int!, data: UpdateUsersDto!): Users!
  login(loginInput: LoginResquestDto!, deviceName: String!): LoginResponseDto!
  logout: LogoutResponseDto!
  createRole(data: CreateRolesDto!): Roles!
  updateRoles(id: Int!, data: UpdateRolesDto!): Roles!
  deleteRoles(data: DeleteRolesInputDto!): DeleteRolesResponseDto!
  createCustomer(data: CreateCustomersDto!): Customers!
  updateCustomer(id: Int!, data: UpdateCustomersDto!): Customers!
  deleteCustomer: Customers!
}

input CreateUsersDto {
  username: String!
  password: String
  idtb_roles: Float!
  name: String!
  last_name: String!
  cpf: String!
  email: String!
  phone: String!
}

input UpdateUsersDto {
  name: String
  last_name: String
  username: String
  cpf: String
  email: String
  phone: String
  status: Boolean
  inactivated_at: DateTime
  inactivated_by: Float
}

input LoginResquestDto {
  username: String!
  password: String!
}

input CreateRolesDto {
  name: String!
  description: String!
}

input UpdateRolesDto {
  name: String
  description: String
  status: Boolean
}

input DeleteRolesInputDto {
  id: Int!
}

input CreateCustomersDto {
  name: String!
  last_name: String!
  cpf: String!
  email: String!
  contact: String!
  image_url: String
}

input UpdateCustomersDto {
  name: String
  last_name: String
  cpf: String
  email: String
  contact: String
  updated_by: Float
  status: Boolean
  image: String
  inactivated_at: DateTime
  inactivated_by: Float
}